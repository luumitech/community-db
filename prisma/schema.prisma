// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

generator pothos {
  provider = "prisma-pothos-types"
  output   = "../src/app/graphql/generated/pothos-types.ts"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  email         String      @unique
  communityIds  String[]    @db.ObjectId
  communityList Community[] @relation(fields: [communityIds], references: [id])
}

enum Role {
  USER
  ADMIN
}

model Community {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?  @updatedAt
  name         String
  userIds      String[]   @db.ObjectId
  userList     User[]     @relation(fields: [userIds], references: [id])
  propertyList Property[]
}

model Property {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  updatedBy      String?
  address        String
  postalCode     String?
  notes          String?
  occupantList   Occupant[]
  membershipList Membership[]
  community      Community    @relation(fields: [communityId], references: [id])
  communityId    String       @db.ObjectId

  // Add text index on fields that are searchable
  @@fulltext([address, occupantList.firstName, occupantList.lastName])
}

/// Occupant information within a property
type Occupant {
  firstName String?
  lastName  String?
  // Opt out of communication
  optOut    Boolean?
  email     String?
  home      String?
  work      String?
  cell      String?
}

/// Membership information within a property
type Membership {
  year             Int
  isMember         Boolean?
  eventAttended    String?
  paymentDate      DateTime?
  paymentMethod    String?
  paymentDeposited Boolean?
}
