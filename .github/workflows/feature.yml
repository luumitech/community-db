name: Feature branch

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
      - develop

env:
  NODE_VERSION: '20'
  MONGODB_VERSION: '4.2'

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      # - name: Start MongoDB
      #   uses: supercharge/mongodb-github-action@1.3.0
      #   with:
      #     mongodb-version: ${{ env.MONGODB_VERSION }}

      # # Main logic
      # - name: Install dependencies
      #   run: |
      #     yarn install --prefer-offline --frozen-lockfile

      # - name: Code checking
      #   run: |
      #     yarn generate
      #     yarn lint
      #     yarn ts-check

      # - name: Jest unit tests
      #   # add following to `yarn test`:
      #   #  --forceExit to bypass --detectOpenHandle error
      #   run: |
      #     yarn jest --ci --runInBand --env=node

      # - name: Cypress tests
      #   uses: cypress-io/github-action@v4
      #   with:
      #     start: yarn start:test
      #     wait-on: 'http://localhost:3000/admin'
      #     record: false
      #     parallel: false
      #   env:
      #     NODE_ENV: test

      # After the test run completes, store videos and any screenshots
      # - name: Cypress upload artifacts
      #   uses: actions/upload-artifact@v3
      #   if: failure()
      #   with:
      #     name: cypress-artifacts
      #     retention-days: 5
      #     path: |
      #       cypress/screenshots
      #       cypress/videos

  deploy:
    name: Deploy
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn install --prefer-offline --frozen-lockfile

      - name: Build for deployment
        run: |
          yarn build
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          AZURE_STORAGE_MODE: ${{ vars.AZURE_STORAGE_MODE }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          working-directory: .next     
